geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 20))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14), axis.text.y = element_text(size=12))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank())
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_blank())
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
panel.grid.major = element_line(colour = "black"))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
panel.grid.major = element_line(colour = "grey"))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
panel.grid.major = element_line(colour = "grey", alpha = 0.5))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
panel.grid.major = element_line(colour = "grey"))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
panel.grid.major = element_line(colour = "grey"),
axis.line = element_line(colour = "black"))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black"))
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(0, color = "black", size = 1)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(0, colour = "black", size = 1)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 1)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.5)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "#E69F00")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "gold")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
p1 <- ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "gold")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
p2 <- ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "gold")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black")) +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
multiplot(p1, p2, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, cols=2)
multiplot(p1, p2)
multiplot(p1, p2, cols=2)
p1 <- ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "gold")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black"),
legend.position="none") +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
multiplot(p1, p2, cols=2)
library(gridExtra)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
grid_arrange_shared_legend(p1, p2)
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
grid_arrange_shared_legend(p1, p2)
multiplot(p1, p2, cols=2)
grid_arrange_shared_legend(p1, p2)
multiplot(p1, p2, cols=2)
grid_arrange_shared_legend(p1, p2)
multiplot(p1, p2, cols=2, grid_arrange_shared_legend(p1, p2))
p2 <- ggplot(Fis2, aes(x = variable, y = value, fill = variable, colour = variable)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(width = .5),
size = 20, shape = "_", show.legend = F) + # plot mean as "-"
geom_point() +
scale_color_manual(values=c("medium blue", "gold")) +
labs(x = NULL, y = "F") +
theme(axis.title.y = element_text(angle=0, vjust = 0.5, size = 14),
axis.text.y = element_text(size=12),
axis.text.x=element_blank(),
panel.background = element_rect(fill = "transparent",colour =
NA),
axis.line = element_line(colour = "black"),
legend.position="none") +
geom_hline(yintercept = 0, colour = "black", size = 0.25)
grid_arrange_shared_legend(p1, p2)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 2,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
grid_arrange_shared_legend(p1, p2)
grid_arrange_shared_legend <- function(..., nrow = 1, ncol = length(list(...)), position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
g <- ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
gl <- lapply(plots, function(x) x + theme(legend.position = "none"))
gl <- c(gl, nrow = nrow, ncol = ncol)
combined <- switch(position,
"bottom" = arrangeGrob(do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)),
"right" = arrangeGrob(do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)))
grid.newpage()
grid.draw(combined)
}
grid_arrange_shared_legend(p1, p2)
library(ggplot2)
library(ggmap)
lon <- c(-61.4472)
lat <- c(15.450319)
df <- as.data.frame(cbind(lon,lat))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
install.packages(ggmap)
install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
devtools::install_github("dkahle/ggmap")
devtools::install_github("hadley/ggplot2")
library(ggplot2)
library(ggmap)
lon <- c(-61.4472)
lat <- c(15.450319)
df <- as.data.frame(cbind(lon,lat))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
devtools::install_github("hadley/ggplot2@v2.2.0")
library(ggplot2)
library(ggmap)
lon <- c(-61.4472)
lat <- c(15.450319)
df <- as.data.frame(cbind(lon,lat))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
citation("ggmap")
version
citation
citation()
citation("ggmap")
n_2 <- 6+2
n_2
n_1 <- 6+2
n_2 <- n_1*3
n_3 <- n_2-6
answer <- n_3/3
answer
library(ggplot2)
tips <- read.csv("http://www.ggobi.org/book/data/tips.csv")
dim(tips)
head(tips)
View(tips)
summary(tips)
((42+2)*3-6)/3
((42+2)*3-6)/3
x <- 42+2
y <- x*3
z <- (y-6)/3
z
typeof(tips)
summary(tips)
typeof(tips)
str(tips)
unique(tips$day)
library(ggplot2)
qplot(totbill, tip, data = tips)
lm(tip ~ totbill, data = tips)
gender <- c("male", "female", "female", "female", "male")
gender
is.vector(gender)
is.character(gender)
is.numeric(gender)
is.factor(gender)
summary(gender)
genderf <- factor(gender)
is.vector(genderf)
is.character(genderf)
is.factor(genderf)
summary(genderf)
summary(tips$day)
mydata
mydata <- matrix(c(140, 120, 160, 145, 125, 65, 60, 63, 66, 61, 112, 103), ncol = 2, byrow = FALSE)
mydata
colnames(mydata) <- c("Weight.lbs", "Height.in")
mydata
summary(mydata)
summary(mydata)
df <- data.frame(Weight.lbs = c(140, 120, 160, 145, 125,
180, 165), Height.in = c(65, 60, 63, 66, 61, 70, 68),
Gender = c(rep("Female", 5), rep("Male", 2)))
df
dim(df)
summary(df)
qplot(totbill, tip, data = tips) +
geom_smooth(method='lm',formula=tip~totbill)
qplot(totbill, tip, data = tips) +
geom_smooth(method='lm',formula=tips$tip~tips$totbill)
ggplot(totbill, tip, data = tips) +
geom_smooth(method='lm',formula=tips$tip~tips$totbill)
ggplot(tips$totbill, tips$tip) +
geom_smooth(method='lm',formula=tips$tip~tips$totbill)
abline(lm(tip ~ totbill, data = tips))
qplot(totbill, tip, data = tips)
abline(lm(tip ~ totbill, data = tips))
qplot(totbill, tip, data = tips)
abline(lm(tip ~ totbill, data = tips))
fit <- lm(tip ~ totbill, data = tips)
qplot(totbill, tip, data = tips)
fit <- lm(tip ~ totbill, data = tips)
abline(fit)
plot(totbill, tip, data = tips)
ggplotRegression(fit)
plot(fit)
nrow(tips)
ncol(tips)
0.1050(45) + 0.9203
0.1050*45 + 0.9203
line <- lm(tip ~ totbill, data = tips)
summary(line)
pwd #prints the working directory to your console; this tells you where you are at
pwd ()#prints the working directory to your console; this tells you where you are at
getwd()#prints the working directory to your console; this tells you where you are at
setwd("/Users/jessicajudson/Desktop/BCB546X-Spring2016/")
plot(cars)
#Comments are always written with a pound sign in R. This tells R not to run the writing as a command.
#if you are in the box where you are reading this, this is where you can write and save commands. To execute the command, press the play button to the right if you are in an R Markdown Notebook. If you are in the white space of a regular file or a new script, place your cursor within the line you want to run and press the Run button above or the command and enter buttons for a mac and control enter for a windows machine. Another way is to write your command in the console below. Then just press enter to run the command. Example:
?mean #run this code
#In order for R to know what data you are working with, you need to tell it where to search in your computer. To do this, there are two options: 1) Go to Session in the top menu and choose Set Working Directory and Choose Directory, navigate to where the files are, and pick the folder. 2) Set using the command line with the following commands:
getwd()#prints the working directory to your console; this tells you where you are at
setwd("insert_path_here") #this allows you to set the working directory. An example path would be "~/Desktop/ISUEvoGen462/Week_1/Example_Data"
setwd("/Users/jessicajudson/Desktop/ISUEvoGen462/Week_1/Example_Data/")
#loading a dataset into R requires that you are in the correct directory.
read.table("exampletextfile.txt", header = TRUE, sep = "\t") #load an example text file in your example data folder; results appear below. sep refers to the type of separator that delimits data in the file, which is a tab for this example file
